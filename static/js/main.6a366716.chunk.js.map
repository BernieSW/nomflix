{"version":3,"sources":["Components/Section.js","Components/Loader.js","Components/Message.js","api.js","Components/Poster.js","signalRApi.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js","assets/NoneImage.JPG","images/LoadingImg2.gif"],"names":["Container","styled","div","Arrow","i","props","rightIdx","leftIdx","Title","span","Grid","Section","title","children","className","role","aria-label","src","LoadingImg","alt","Text","color","Message","text","API_DEFAULT_PARAMS","api_key","language","api","axios","create","baseURL","movieApi","get","params","id","append_to_response","term","query","encodeURIComponent","tvApi","Rating","Year","Image","bgUrl","ImageContainer","Poster","imageUrl","rating","year","isMovie","to","require","length","substring","PureComponent","HomePresenter","nowPlaying","upcoming","popular","loading","error","Helmet","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","HomeContainer","state","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResult","tvResult","searchTerm","handleSubmit","updateTerm","texting","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","a","TVPresenter","topRated","airingToday","TVContainer","console","log","Header","header","HeaderMainImg","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","YoutubeOpt","height","width","playerVars","autoplay","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","gen","index","name","overview","videos","videoId","opts","DetailContainer","includes","match","push","history","parseId","parseInt","isNaN","path","exact","component","Home","Search","TV","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6a366716.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nconst Container = styled.div`\r\n    &:not(:last-child){\r\n        margin-bottom: 100px;\r\n    }    \r\n    margin-bottom: 10px;\r\n    /* display: flex;\r\n    flex-direction: row;    \r\n    justify-content:center;\r\n    align-items:center;\r\n    height:100vh; \r\n    overflow:hidden;    \r\n    &:hover {\r\n    .arrow-right,\r\n    .arrow-left {\r\n      opacity: 1;\r\n      transition: 0.2s;\r\n    }};   */\r\n`;\r\nconst ArrorwIcon = styled.i`\r\n   font-size:5vw;\r\n   justify-content: center;\r\n   align-items: center;\r\n   position: absolute;\r\n   width: 4%;\r\n   height: 100%;\r\n   opacity:0.2;   \r\n`;\r\nconst Arrow = styled.div`\r\n    right: ${props => props.rightIdx};\r\n    left: ${props => props.leftIdx};\r\n    color: white;\r\n    margin-top:25px;   \r\n    background-color: rgba(20, 20, 20, 0.2);\r\n    width: 4%;\r\n    height: 220px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    cursor: pointer;\r\n    font-size: 7vw;\r\n    opacity: 1;\r\n    &:hover {\r\n        font-size: 8vw;\r\n        transition: 0.1s;        \r\n    }\r\n`;\r\n\r\n\r\nconst Title = styled.span`\r\n    font-size:20px;\r\n    font-weight: 600;\r\n    margin-bottom:55px;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top:25px;            \r\n    /* display:grid;    \r\n    grid-template-columns:repeat(auto-fill, minmax(150px, 2fr)); */\r\n    display:flex;\r\n    font-size:12px;    \r\n    overflow:hidden;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Arrow leftIdx={100} className={\"fa fa-angle-left\"} />\r\n        <Arrow rightIdx={0} className={\"fa fa-angle-right\"} />\r\n        <Grid>{children}</Grid>\r\n\r\n    </Container>\r\n);\r\n\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n}\r\n\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\"\r\nimport LoadingImg from \"../images/LoadingImg2.gif\"\r\nconst Container = styled.div`\r\n    height:100vh;\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content: center;\r\n    margin-top:20px;    \r\n`;\r\nexport default () =>\r\n    <Container>\r\n        <span role=\"img\" aria-label=\"Loading\">\r\n            <img src={LoadingImg} alt='LoadingImg' />\r\n        </span>\r\n    </Container>\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content:center;\r\n\r\n`;\r\n\r\nconst Text = styled.span`    \r\n    font-weight:600;\r\n    color:${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default Message;","import axios from \"axios\"\r\nexport const API_DEFAULT_PARAMS = {\r\n    api_key: \"97c0dbad929d4f173cc7f596ceac2247\",\r\n    language: \"en-US\"\r\n}\r\nexport const API_YOUTUBE_BASE_URL = \"https://www.youtube.com/watch/\"\r\nexport const API_IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/w300/\"\r\nexport const API_IMAGE_BASE_ORIGIN_URL = \"http://image.tmdb.org/t/p/original\"\r\nconst api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\"\r\n});\r\nexport const videoApi = {\r\n    getMovieVedio: id => api.get(API_YOUTUBE_BASE_URL, {\r\n        params: {\r\n            v: id\r\n        }\r\n    }),\r\n    getTVVedio: id => api.get(API_YOUTUBE_BASE_URL, {\r\n        params: {\r\n            v: id\r\n        }\r\n    })\r\n}\r\nexport const movieApi = {\r\n    getVideo: id => api.get(`/movie/${id}/videos`, {\r\n        params: { ...API_DEFAULT_PARAMS }\r\n    }),\r\n    nowplaying: () => api.get(\"movie/now_playing\", {\r\n        params: { ...API_DEFAULT_PARAMS }\r\n    }),\r\n    upcoming: () => api.get(\"movie/upcoming\", {\r\n        params: { ...API_DEFAULT_PARAMS }\r\n    }),\r\n    popular: () => api.get(\"movie/popular\", {\r\n        params: { ...API_DEFAULT_PARAMS }\r\n    }),\r\n    movieDetail: id => api.get(`movie/${id}`, {\r\n        params: {\r\n            ...API_DEFAULT_PARAMS,\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: term => api.get(\"search/movie\", {\r\n        params: {\r\n            ...API_DEFAULT_PARAMS,\r\n            query: encodeURIComponent(term)\r\n        }\r\n    }),\r\n}\r\n\r\nexport const tvApi = {\r\n    getVideo: id => api.get(`/tv/${id}/videos`, {\r\n        params: { ...API_DEFAULT_PARAMS }\r\n    }),\r\n    topRated: () => api.get(\"tv/top_rated\", {\r\n        params: { ...API_DEFAULT_PARAMS }\r\n    }),\r\n    popular: () => api.get(\"tv/popular\", {\r\n        params: { ...API_DEFAULT_PARAMS }\r\n    }),\r\n    airingToday: () => api.get(\"tv/airing_today\", {\r\n        params: { ...API_DEFAULT_PARAMS }\r\n    }),\r\n    showDetail: id => api.get(`tv/${id}`, {\r\n        params: {\r\n            ...API_DEFAULT_PARAMS,\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: term => api.get(\"search/tv\", {\r\n        params: {\r\n            ...API_DEFAULT_PARAMS,\r\n            query: encodeURIComponent(term)\r\n        }\r\n    }),\r\n}","import React from \"react\"\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { API_IMAGE_BASE_URL } from \"../api\"\r\nconst Container = styled.div`\r\n    font-size:12px;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom:-5px;\r\n    right:5px;\r\n    position:absolute;\r\n    opacity:0;\r\n    transition: opacity 0.1s linear;\r\n`;\r\nconst Title = styled.span`\r\n    display: block;\r\n    margin-bottom:3px;\r\n`;\r\nconst Year = styled.span`\r\n    color:rgba(255,255,255,0.5);    \r\n    margin-bottom:10px;\r\n`;\r\nconst Image = styled.div`\r\n    background-size:cover;\r\n    border-radius:8px;\r\n    background-position:center center;\r\n    height:180px;\r\n    width:150px;\r\n    background-image:url(${props => props.bgUrl});\r\n    transition: opacity 0.1s linear;\r\n    /*\r\n    display:flex;\r\n    justify-content:space-between;    \r\n    width:180px;\r\n    height:180px;\r\n    background-image:url(${props => props.bgUrl});\r\n    width: 15vw;\r\n    height: 15vw;\r\n    background-size: 100% 100%;\r\n    margin: 0 2px 0 2px;\r\n    border-radius: 1px;\r\n    cursor: pointer;\r\n    transition: 0.5s;\r\n    color: white;     */\r\n    /* &:hover {\r\n      width: 30vw;\r\n      height: 22vw;\r\n      transition: 0.5s;\r\n      opacity: 1;\r\n      transition-delay: 0.3s;      \r\n    } */\r\n`;\r\nconst ImageContainer = styled.div`\r\n    margin-bottom:5px;\r\n    position:relative;\r\n    &:hover{\r\n        ${Image}{\r\n            opacity:0.3;\r\n        }\r\n        ${Rating}{\r\n            opacity:1;\r\n        }\r\n        \r\n    }\r\n`;\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) =>\r\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n        <Container>\r\n            <ImageContainer >\r\n                <Image bgUrl={imageUrl ? API_IMAGE_BASE_URL + imageUrl : require(\"../assets/NoneImage.JPG\")} />\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"rating\">\r\n                        ☆\r\n                </span>\r\n                    {rating}/10</Rating>\r\n            </ImageContainer>\r\n            <Title>{title && title.length > 18 ? `${title.substring(0, 18)}...` : title} </Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n    </Link>\r\n\r\n\r\nPoster.propTypes = {\r\n    imageUrl: PropTypes.string,\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\n\r\nexport default Poster;","import * as signalR from '@aspnet/signalr';\r\nimport React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nclass SignalR extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"TTzzz\");\r\n        this.connection = null;\r\n        this.onNotifReceived = this.onNotifReceived.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"TTzzz\");\r\n        const protocol = new signalR.JsonHubProtocol();\r\n\r\n        const transport = signalR.HttpTransportType.ServerSentEvents;//.WebSockets;\r\n        const options = {\r\n            transport,\r\n            logMessageContent: true,\r\n            logger: signalR.LogLevel.Trace,\r\n            accessTokenFactory: () => this.props.accessToken,\r\n        };\r\n        // create the connection instance\r\n        // this.connection = new signalR.HubConnectionBuilder()\r\n        //     .withUrl(this.props.connectionHub, options)\r\n        //     .withHubProtocol(protocol)\r\n        //     .build();\r\n        this.connection = new signalR.HubConnectionBuilder()\r\n            .withUrl(this.props.connectionHub, options)\r\n            .withHubProtocol(protocol)\r\n            .configureLogging(signalR.LogLevel.Information)\r\n            .build();\r\n        //this.connection.on('DatabaseOperation', this.onNotifReceived); \r\n        //this.connection.on('ReceiveMessage', this.onNotifReceived);\r\n        this.connection.on('ReceiveMessage', this.onNotifReceived);\r\n        this.connection.start()\r\n            .then(() => console.info('SignalR Connected'))\r\n            .catch(err => console.error('SignalR Connection Error: ', err));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.connection && this.connection.stop();\r\n    }\r\n\r\n    onNotifReceived(res) {\r\n        console.info('Yayyyyy, I just received a notification!!!', res);\r\n    }\r\n\r\n    render() {\r\n        return <span />;\r\n    };\r\n};\r\n\r\nSignalR.propTypes = {\r\n    connectionHub: PropTypes.string.isRequired,\r\n    accessToken: PropTypes.string.isRequired\r\n};\r\n\r\nexport default SignalR;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport Section from \"../../Components/Section\"\r\nimport Loader from \"../../Components/Loader\"\r\nimport Message from \"../../Components/Message\"\r\nimport Poster from \"../../Components/Poster\"\r\nimport SignalR from './../../signalRApi';\r\n\r\nconst Container = styled.div`\r\n    padding:20px;\r\n    /* display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: no-wrap;\r\n    justify-content: space-between;     */\r\n    /* height: 100vh;\r\n    width: 100vw;     */\r\n`;\r\n\r\n\r\n\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) =>\r\n    <>\r\n        <Helmet>\r\n            <title>Movies | Nomflix</title>\r\n        </Helmet>\r\n        {loading ? <Loader /> : (\r\n            <>\r\n                {/* <SignalR connectionHub=\"http://localhost:3004/hubs\" /> */}\r\n                <Container>\r\n\r\n                    {nowPlaying && nowPlaying.length > 0 &&\r\n                        <Section title=\"Now Playing\">\r\n                            {nowPlaying.map(movie =>\r\n                                <Poster\r\n                                    key={movie.id}\r\n                                    id={movie.id}\r\n                                    title={movie.original_title}\r\n                                    imageUrl={movie.poster_path}\r\n                                    rating={movie.vote_average}\r\n                                    year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                                    isMovie={true} >\r\n                                </Poster>)}\r\n                        </Section>\r\n                    }\r\n                </Container>\r\n                <Container>\r\n                    {\r\n                        upcoming && upcoming.length > 0 &&\r\n                        < Section title=\"Upcoming Movies\">\r\n                            {upcoming.map(movie =>\r\n                                <Poster\r\n                                    key={movie.id}\r\n                                    id={movie.id}\r\n                                    title={movie.original_title}\r\n                                    imageUrl={movie.poster_path}\r\n                                    rating={movie.vote_average}\r\n                                    year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                                    isMovie={true}>\r\n                                </Poster>)}\r\n                        </Section>\r\n                    }\r\n                </Container>\r\n                <Container>\r\n                    {\r\n                        < Section title=\"Popular Movies\">\r\n                            {popular.map(movie => <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.original_title}\r\n                                imageUrl={movie.poster_path}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                                isMovie={true}>\r\n                            </Poster>)}\r\n                        </Section>\r\n\r\n                    }\r\n                    {error && <Message color=\"#e74c3c\" text={error} />}\r\n                </Container >\r\n            </>\r\n        )};\r\n\r\n    </>\r\n\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array,\r\n    upcoming: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { movieApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {\r\n                data: { results: nowPlaying }\r\n            } = await movieApi.nowplaying();\r\n            const {\r\n                data: { results: upcoming }\r\n            } = await movieApi.upcoming();\r\n            const {\r\n                data: { results: popular }\r\n            } = await movieApi.popular();\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular\r\n            });\r\n        } catch{\r\n            this.setState({\r\n                error: \"Can't find movies information\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n        return (<HomePresenter\r\n            nowPlaying={nowPlaying}\r\n            upcoming={upcoming}\r\n            popular={popular}\r\n            error={error}\r\n            loading={loading} />);\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport Loader from \"../../Components/Loader\"\r\nimport Section from \"../../Components/Section\"\r\nimport Message from \"../../Components/Message\"\r\nimport Poster from \"../../Components/Poster\"\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom:50px;\r\n    width:100%;\r\n`;\r\nconst Input = styled.input`\r\n    all: unset;\r\n    font-size: 28px;\r\n    width:100%;\r\n`;\r\n\r\nconst SearchPresenter = ({ movieResult, tvResult, searchTerm, error, loading, handleSubmit, updateTerm, texting }) =>\r\n    <>\r\n        <Helmet>\r\n            <title>Search | Nomflix</title>\r\n        </Helmet>\r\n        <Container>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm} />\r\n            </Form>\r\n            {loading ? <Loader /> :\r\n                <>\r\n                    {movieResult && movieResult.length > 0 && (\r\n                        <Section title=\"Movie Result\">\r\n                            {movieResult.map(movie => (\r\n                                <Poster\r\n                                    key={movie.id}\r\n                                    id={movie.id}\r\n                                    title={movie.original_title}\r\n                                    imageUrl={movie.poster_path}\r\n                                    rating={movie.vote_average}\r\n                                    year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                                    isMovie={true}>\r\n                                </Poster>)\r\n                            )}\r\n                        </Section>\r\n                    )}\r\n                    {tvResult && tvResult.length > 0 && (\r\n                        <Section title=\"TV Show Result\">\r\n                            {tvResult.map(show => (\r\n                                <Poster\r\n                                    key={show.id}\r\n                                    id={show.id}\r\n                                    title={show.original_name}\r\n                                    imageUrl={show.poster_path}\r\n                                    rating={show.vote_average}\r\n                                    year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                                    isMovie={true}>\r\n                                </Poster>)\r\n                            )}\r\n                        </Section>\r\n                    )}\r\n                    {error && <Message color=\"#e74c3c\" text={error} />}\r\n                    {texting ? <Message text={`Waiting..... ${searchTerm} `} color=\"#95a5a6\" /> :\r\n                        movieResult &&\r\n                        tvResult &&\r\n                        tvResult.length === 0 &&\r\n                        movieResult.length === 0 && (\r\n                            <Message text={`Nothing Found for : ${searchTerm} `} color=\"#95a5a6\" />\r\n                        )}\r\n                </>\r\n            }\r\n        </Container>\r\n    </>;\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResult: PropTypes.array,\r\n    tvResult: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    searchTerm: PropTypes.string,\r\n    error: PropTypes.string,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    updateTerm: PropTypes.func.isRequired,\r\n    texting: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { tvApi, movieApi } from \"api\"\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResult: null,\r\n        tvResult: null,\r\n        error: null,\r\n        searchTerm: \"\",\r\n        loading: false,\r\n        texting: false\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { searchTerm } = this.state;\r\n        if (searchTerm !== \"\") {\r\n            this.searchByTerm();\r\n        }\r\n    }\r\n    updateTerm = (event) => {\r\n        //synthetic event from react\r\n        const { target: { value } } = event;\r\n        this.setState({\r\n            searchTerm: value,\r\n            texting: true\r\n        })\r\n    }\r\n    searchByTerm = async () => {\r\n        const { searchTerm } = this.state;\r\n        try {\r\n            this.setState({\r\n                loading: true,\r\n            })\r\n            const { data: { results: movieResult } } = await movieApi.search(searchTerm);\r\n            const { data: { results: tvResult } } = await tvApi.search(searchTerm);\r\n            this.setState({\r\n                movieResult, tvResult\r\n            })\r\n\r\n        } catch{\r\n            this.setState({\r\n                error: \"Can't find Result\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false,\r\n                texting: false\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { movieResult, tvResult, searchTerm, error, loading, texting } = this.state;\r\n        return <SearchPresenter\r\n            movieResult={movieResult}\r\n            tvResult={tvResult}\r\n            searchTerm={searchTerm}\r\n            error={error}\r\n            loading={loading}\r\n            texting={texting}\r\n            handleSubmit={this.handleSubmit}\r\n            updateTerm={this.updateTerm} />\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport Section from \"../../Components/Section\"\r\nimport Loader from \"../../Components/Loader\"\r\nimport Message from \"../../Components/Message\"\r\nimport Poster from \"../../Components/Poster\"\r\n\r\nconst Container = styled.div`\r\n    padding:0px 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, airingToday, popular, error, loading }) =>\r\n    <>\r\n        <Helmet>\r\n            <title>TV | Nomflix</title>\r\n        </Helmet>\r\n        {loading ? <Loader /> :\r\n            <Container>\r\n                {\r\n                    topRated && topRated.length > 0 &&\r\n                    <Section title=\"Top Rated Shows\">\r\n                        {topRated.map(show => <Poster\r\n                            key={show.id}\r\n                            id={show.id}\r\n                            title={show.original_name}\r\n                            imageUrl={show.poster_path}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                            isMovie={false}>\r\n                        </Poster>)}\r\n                    </Section>\r\n                }\r\n                {\r\n                    popular && popular.length > 0 &&\r\n                    <Section title=\"Popular Shows\">\r\n                        {popular.map(show => <Poster\r\n                            key={show.id}\r\n                            id={show.id}\r\n                            title={show.original_name}\r\n                            imageUrl={show.poster_path}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                            isMovie={false}>\r\n                        </Poster>)}\r\n                    </Section>\r\n                }\r\n                {\r\n                    airingToday && airingToday.length > 0 &&\r\n                    <Section title=\"Airing Today\">\r\n                        {airingToday.map(show => <Poster\r\n                            key={show.id}\r\n                            id={show.id}\r\n                            title={show.original_name}\r\n                            imageUrl={show.poster_path}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                            isMovie={false}>\r\n                        </Poster>)}\r\n                    </Section>\r\n                }\r\n                {error && <Message color=\"#e74c3c\" text={error} />}\r\n            </Container>};\r\n    </>\r\n\r\n\r\nTVPresenter.propTypes = {\r\n    topRated: PropTypes.array,\r\n    airingToday: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\"\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n    async componentDidMount() {\r\n        try {\r\n            const { data: { results: topRated } } = await tvApi.topRated();\r\n            const { data: { results: popular } } = await tvApi.popular();\r\n            const { data: { results: airingToday } } = await tvApi.airingToday();\r\n            this.setState({\r\n                topRated, popular, airingToday\r\n            });\r\n        }\r\n        catch{\r\n            this.setState({\r\n                error: \"Can't find movies information\"\r\n            })\r\n        }\r\n        finally {\r\n            this.setState({\r\n                loading: false,\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { topRated, popular, airingToday, error, loading } = this.state;\r\n        console.log(this.state);\r\n        return <TVPresenter\r\n            topRated={topRated}\r\n            airingToday={airingToday}\r\n            popular={popular}\r\n            error={error}\r\n            loading={loading} />\r\n    }\r\n}\r\n\r\n","import React from \"react\"\r\nimport { Link, withRouter } from \"react-router-dom\"\r\nimport styled from 'styled-components'\r\nconst Header = styled.header`\r\n    color: white;\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    width:100px;\r\n    height:100%;\r\n    display:flex;\r\n    justify-content:center;\r\n    padding: 0px 10px;\r\n    background-color:rgba(20,20,20,0.8);\r\n    z-index: 0;\r\n    box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\r\n`;\r\nconst HeaderMainImg = styled.div`\r\n    width:50px;\r\n    height:50px;\r\n    z-index:0;    \r\n    background:url(/images/LoadingImg.gif) no-repeat center center;\r\n`;\r\nconst List = styled.ul`    \r\n    &:hover{\r\n    background-color : transparent;\r\n    }\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width: 50px;\r\n    height:50px;\r\n    text-align:center;\r\n    font-size:20px;\r\n    &:not(:last-child) {\r\n        margin-right: 10px;\r\n        margin-bottom: 10px;\r\n    }\r\n    border-bottom : 5px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\r\n    transition:border-bottom 0.5s ease-in-out;\r\n`;\r\nconst SLink = styled(Link)`\r\n    height:50px;\r\n    display:flex;    \r\n    align-items : center;\r\n    justify-content:center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n    <Header>\r\n        <List>\r\n            <HeaderMainImg current={pathname === \"/\"}>\r\n                <SLink to=\"/\"></SLink>\r\n            </HeaderMainImg>\r\n            <Item current={pathname === \"/movie\"}>\r\n                <SLink to=\"/movie\">Movies</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/tv\"}>\r\n                <SLink to=\"/tv\">TV</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/search\"}>\r\n                <SLink to=\"/search\">Search</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n));","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { API_IMAGE_BASE_ORIGIN_URL, API_YOUTUBE_BASE_URL } from \"../../api\"\r\nimport Loader from \"../../Components/Loader\";\r\nimport Youtube from \"react-youtube\"\r\n\r\nconst YoutubeOpt = {\r\n    height: '500vh',\r\n    width: '840',\r\n    playerVars: {\r\n        autoplay: 1,\r\n    },\r\n}\r\n\r\nconst Container = styled.div`\r\n    height:calc(100vh - 50px);\r\n    width:100%;\r\n    display :flex;\r\n    justify-content:space-between;\r\n    position:relative;\r\n    padding:50px;\r\n    align-self: auto;\r\n`;\r\nconst Backdrop = styled.div`\r\n    position:absolute;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:100%;\r\n    filter:blur(3px);\r\n    opacity:0.5;\r\n    background-image:url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size:cover;\r\n    z-index:0;\r\n`;\r\nconst Content = styled.div`\r\n    display:flex;    \r\n    height:100%;\r\n    width:100%;\r\n    position:relative;\r\n    z-index:1;\r\n`;\r\nconst Cover = styled.div`\r\n    width:30%;\r\n    background-image:url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size:cover;\r\n    height:100%;\r\n    border-radius:5px;\r\n`;\r\n\r\n\r\nconst Data = styled.div`\r\n    width:70%;\r\n    margin-left: 10px;    \r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size:32px;\r\n    margin-bottom:10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    font-size:20px;\r\n    margin:20px 0;\r\n`;\r\n\r\nconst Item = styled.span`\r\n\r\n`;\r\nconst Divider = styled.span`\r\n    margin:0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    font-size:14px;\r\n    opacity:0.7;\r\n    line-height:1.5;\r\n    width:50%;\r\n    margin-bottom:20px;\r\n`;\r\n\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n    loading ?\r\n        <>\r\n            <Helmet>\r\n                <title>Loading | Nomflix</title>\r\n            </Helmet>\r\n            <Loader />\r\n        </>\r\n        :\r\n        <Container>\r\n            <Helmet>\r\n                <title>{result.original_title ? result.original_title : result.original_name} | Nomflix</title>\r\n            </Helmet>\r\n            <Backdrop bgImage={result.backdrop_path ? API_IMAGE_BASE_ORIGIN_URL + result.backdrop_path : require(\"../../assets/NoneImage.JPG\")} />\r\n            <Content>\r\n                <Cover bgImage={result.poster_path ? API_IMAGE_BASE_ORIGIN_URL + result.poster_path : require(\"../../assets/NoneImage.JPG\")} />\r\n                <Data>\r\n                    <Title>{result.original_title ? result.original_title : result.original_name}\r\n                    </Title>\r\n                    <ItemContainer>\r\n                        <Item>{result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}</Item>\r\n                        <Divider> · </Divider>\r\n                        <Item>{result.runtime ? result.runtime : result.episode_run_time[0]} min</Item>\r\n                        <Divider> · </Divider>\r\n                        <Item>{result.genres && result.genres.map((gen, index) => index === result.genres.length - 1 ? gen.name : `${gen.name} / `)}</Item>\r\n                        <Divider> · </Divider>\r\n                        <Item>{result.runtime ? result.runtime : result.episode_run_time[0]} min</Item>\r\n                    </ItemContainer>\r\n                    <Overview>{result.overview}</Overview>\r\n                    {result.videos.results[0] && <Youtube videoId={result.videos.results[0].key} opts={YoutubeOpt} />}\r\n                </Data>\r\n\r\n            </Content>\r\n        </Container>;\r\n\r\nDetailPresenter.propTypes = {\r\n    result: PropTypes.object,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { tvApi, movieApi } from \"../../api\"\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const {\r\n            location: { pathname }\r\n        } = props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes(\"/movie\")\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        const {\r\n            match: {\r\n                params: { id }\r\n            },\r\n            history: { push },\r\n        } = this.props;\r\n        const { isMovie } = this.state;\r\n        const parseId = parseInt(id);\r\n        if (isNaN(parseId)) {\r\n            return push(\"/\");\r\n        }\r\n        //let results = null;\r\n        try {\r\n            if (isMovie) {\r\n                const { data: result } = await movieApi.movieDetail(parseId);\r\n                this.setState({\r\n                    result\r\n                })\r\n            }\r\n            else {\r\n                const { data: result } = await tvApi.showDetail(parseId);\r\n                this.setState({\r\n                    result\r\n                })\r\n            }\r\n\r\n        } catch{\r\n            this.setState({\r\n                error: \"Can't find anything\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false,\r\n            })\r\n        }\r\n    };\r\n    render() {\r\n        const { result, error, loading } = this.state;\r\n        return <DetailPresenter\r\n            result={result}\r\n            error={error}\r\n            loading={loading} />\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"../Routes/Home\";\r\nimport Search from \"../Routes/Search\";\r\nimport TV from \"../Routes/TV\";\r\nimport Header from \"./Header\";\r\nimport Detail from \"../Routes/Detail\"\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/search\" exact component={Search} />\r\n                <Route path=\"/tv\" component={TV} />\r\n                <Route path=\"/movie/:id\" component={Detail} />\r\n                <Route path=\"/show/:id\" component={Detail} />\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n        </>\r\n    </Router>\r\n);","import { createGlobalStyle } from \"styled-components\"\r\nimport reset from \"styled-reset\"\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family: Georgia, \"Times New Roman\", serif;\r\n        font-size: 8px;\r\n        background-color:rgba(20,20,20,1);        \r\n        color:white;\r\n        padding-top:15px;\r\n        padding-left:100px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import React from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\nfunction App() {\n  return (    \n    <div className=\"App\">\n    <>            \n      <Router/>\n      <GlobalStyles/>\n    </>         \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nReactDOM.render(<App />,  document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/NoneImage.0eaafba0.JPG\";","module.exports = __webpack_public_path__ + \"static/media/LoadingImg2.d05223f7.gif\";"],"sourceRoot":""}